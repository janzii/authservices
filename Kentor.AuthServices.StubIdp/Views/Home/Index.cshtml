@model AssertionModel
<p>
    The SAML messages sent by the Stub Idp will be signed with <em>@Html.ActionLink("this certificate", "Index", "Certificate")</em>.
    To validate the responses you need to download it and configure your service provider to trust it.
    <em>Caution</em>: Never trust this certificate in a production environment as it will allow anyone to sign in to
    your application as whatever user they choose.
</p>

<p>
    Metadata for the Stub Idp is available at @Html.ActionLink("/Metadata", "Index", "Metadata") or in a
    @Html.ActionLink("browser friendly version", "BrowserFriendly", "Metadata") version (with a content type
    that makes the browser display the entire XML). There is also
    @Html.ActionLink("federation metadata", "Index", "Federation"), with this idp as the only federation member
    available (@Html.ActionLink("browser friendly version", "BrowserFriendly", "Federation")).
</p>

<p>
    The Stub idp contains a @Html.ActionLink("stub idp discovery service", "Index", "DiscoveryService") that
    can be used when testing federations.
</p>

<p>
    This form will allow you to send a SAML2 Response to a service provider. If the In Response To ID field is
    empty, the Response is considered unsolicited (IDP initiated).
</p>

@using (Html.BeginForm("Index", "Home"))
{
    if (!string.IsNullOrEmpty(Model.AuthnRequestXml))
    {
        <div>
            @Html.LabelFor(m => m.AuthnRequestXml)
            <pre class="xml">@Model.AuthnRequestXml</pre>
        </div>
    }

    <div>
        @Html.LabelFor(m => m.InResponseTo)
        @Html.EditorFor(m => m.InResponseTo)
        @Html.ValidationMessageFor(m => m.InResponseTo)
    </div>

    <div>
        @Html.LabelFor(m => m.AssertionConsumerServiceUrl)
        @Html.EditorFor(m => m.AssertionConsumerServiceUrl)
        @Html.ValidationMessageFor(m => m.AssertionConsumerServiceUrl)
    </div>

    <div>
        @Html.LabelFor(m => m.NameId)
        @Html.EditorFor(m => m.NameId)
        @Html.ValidationMessageFor(m => m.NameId)
    </div>

    <button>Submit</button>
}


<script>
    // Focus first relevant field to use
    if ($("#InResponseTo").val()) {
        $("#NameId").focus().select();
    } else {
        $("#AssertionConsumerServiceUrl").focus().select();
    }
</script>